use Mojo::Base -strict;
use Mojo::File 'path';
use Test::Mojo;
use Test::More;

$ENV{MOJO_WEBPACK_RUN} = 0;
my $base = path(path(__FILE__)->dirname, 'generate');
mkdir $base;
plan skip_all => "$base does not exist" unless -d $base;

use Mojolicious::Lite;
plugin Webpack => {assets_dir => $base};

my $t     = Test::Mojo->new;
my $asset = $t->app->asset;

note 'package.json';
is $asset->_render_to_file($t->app, 'package.json', $base->child('package.json'))->[0], 'generated',
  'generated package.json';
is $asset->_render_to_file($t->app, 'package.json', $base->child('package.json'))->[0], 'custom', 'custom package.json';

note 'webpack.config.js';
is $asset->_render_to_file($t->app, 'webpack.config.js', $base->child('webpack.config.js'))->[0], 'generated',
  'generated webpack.config.js';
is $asset->_render_to_file($t->app, 'webpack.config.js', $base->child('webpack.config.js'))->[0], 'current',
  'current webpack.config.js';

my $config = $base->child('webpack.config.js')->slurp;
$config =~ s!(Autogenerated.*)\s(\d+\.\d+)!$1 0!;
$base->child('webpack.config.js')->spurt($config);
is $asset->_render_to_file($t->app, 'webpack.config.js', $base->child('webpack.config.js'))->[0], 'generated',
  'regenerated webpack.config.js';

$config =~ s!(Autogenerated.*)!Custom!;
$base->child('webpack.config.js')->spurt($config);
is $asset->_render_to_file($t->app, 'webpack.config.js', $base->child('webpack.config.js'))->[0], 'custom',
  'custom webpack.config.js';

note 'webpack.custom.js';
my $custom = $asset->_render_to_file($t->app, 'webpack.custom.js', $base->child('webpack.custom.js'))->[1]->slurp;
like $custom, qr{module\.exports.*function\(config\)}, 'webpack.custom.js';

$custom = "// Do not overwrite\n\n$custom";
$base->child('webpack.custom.js')->spurt($custom);
$custom = $asset->_render_to_file($t->app, 'webpack.custom.js', $base->child('webpack.custom.js'))->[1]->slurp;
like $custom, qr{Do not overwrite}, 'webpack.custom.js is generated once';

done_testing;

END {
  $base->list->each(sub {unlink}) if $base;
}
