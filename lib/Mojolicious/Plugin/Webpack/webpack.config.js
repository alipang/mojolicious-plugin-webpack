// __AUTOGENERATED__
const path = require('path');

const assetsDir = process.env.WEBPACK_ASSETS_DIR || './assets';
const isDev = process.env.NODE_ENV !== 'production';
const outDir = process.env.WEBPACK_OUT_DIR || path.resolve(__dirname, './public/asset');
const sassIncludePaths = (process.env.SASS_INCLUDE_PATHS || '').split(':');
const sourceMap = process.env.WEBPACK_SOURCE_MAPS ? true : isDev ? true : false;

const CleanWebpackPlugin = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');
const UglifyJsPlugin = require('uglifyjs-webpack-plugin');
const WebpackMd5Hash = require('webpack-md5-hash');

const plugins = [
  new CleanWebpackPlugin(outDir, {}),
  new MiniCssExtractPlugin({
    filename: isDev ? '[name].dev.css' : '[name].[contenthash].css',
  }),
  new HtmlWebpackPlugin({
    cache: true,
    filename: './demo.' + (isDev ? 'dev' : 'prod') + '.html',
    hash: false,
    inject: 'head',
    minify: false,
    showErrors: true,
    template: assetsDir + '/webpack.html',
    xhtml: false
  }),
  new WebpackMd5Hash()
];

const rules = [];

if (process.env.WEBPACK_RULE_FOR_JS) {
  rules.push({
    test: /\.js$/,
    exclude: /node_modules/,
    use: {
      loader: 'babel-loader'
    }
  });
}

if (process.env.WEBPACK_RULE_FOR_CSS) {
  rules.push({
    test: /\.css$/,
    use: [
      MiniCssExtractPlugin.loader,
      {loader: 'css-loader', options: {sourceMap: true}}
    ]
  });
}

if (process.env.WEBPACK_RULE_FOR_SASS) {
  rules.push({
    test: /\.s(a|c)ss$/,
    use: [
      MiniCssExtractPlugin.loader,
      {loader: 'css-loader', options: {sourceMap: sourceMap}},
      {loader: 'sass-loader', options: {includePaths: sassIncludePaths, sourceMap: sourceMap}}
    ]
  });
}

if (process.env.WEBPACK_RULE_FOR_VUE) {
  const { VueLoaderPlugin } = require('vue-loader')
  plugins.push(new VueLoaderPlugin());
  rules.push({
    test: /\.vue$/,
    use: 'vue-loader'
  });
}

module.exports = {
  mode: isDev ? 'development' : 'production',
  entry: require(assetsDir + '/webpack-entries.js')(assetsDir),
  output: {
    filename: isDev ? '[name].dev.js' : '[name].[chunkhash].js',
    path: outDir
  },
  module: {
    rules: rules,
  },
  optimization: {
    minimizer: [
      new UglifyJsPlugin({cache: true, parallel: true, sourceMap: sourceMap}),
      new OptimizeCSSAssetsPlugin({})
    ]
  },
  plugins: plugins
};
